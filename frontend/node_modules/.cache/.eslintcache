[{"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/index.js":"1","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/reportWebVitals.js":"2","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/App.js":"3","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/store/auth-context.js":"4","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/store/pref-context.js":"5","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Auth/AuthForm.js":"6","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Preferences/preferences.js":"7","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Dashboard/Navbar.js":"8","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/FoodOptions/Food.js":"9","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/FoodOptions/Type.js":"10","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Dashboard/Dashboard.jsx":"11","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/DiningHall/TopRecommended.jsx":"12","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/DiningHall/DiningHall.jsx":"13","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Splash/Splash.jsx":"14"},{"size":769,"mtime":1669773665636,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1669076638967,"results":"17","hashOfConfig":"16"},{"size":1238,"mtime":1669953027377,"results":"18","hashOfConfig":"16"},{"size":935,"mtime":1669773665636,"results":"19","hashOfConfig":"16"},{"size":530,"mtime":1669773665636,"results":"20","hashOfConfig":"16"},{"size":9348,"mtime":1669953037362,"results":"21","hashOfConfig":"16"},{"size":11212,"mtime":1670015792327,"results":"22","hashOfConfig":"16"},{"size":7590,"mtime":1669953522707,"results":"23","hashOfConfig":"16"},{"size":476,"mtime":1669491072771,"results":"24","hashOfConfig":"16"},{"size":4294,"mtime":1669491072772,"results":"25","hashOfConfig":"16"},{"size":7148,"mtime":1670015435357,"results":"26","hashOfConfig":"16"},{"size":920,"mtime":1669943799363,"results":"27","hashOfConfig":"16"},{"size":906,"mtime":1669945538532,"results":"28","hashOfConfig":"16"},{"size":10097,"mtime":1669952926199,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"xkaw18",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/index.js",[],[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/reportWebVitals.js",[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/App.js",[],[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/store/auth-context.js",[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/store/pref-context.js",[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Auth/AuthForm.js",[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Preferences/preferences.js",["77","78","79","80"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Prefernces() {\n\tconst navigate = useNavigate();\n\tconst [isClicked, setisClicked] = useState(false);\n\tconst [isBeefClicked, setisBeefClicked] = useState(false);\n\tconst [isDairyClicked, setisDairyClicked] = useState(false);\n\tconst [isEggsClicked, setisEggsClicked] = useState(false);\n\tconst [isShellfishClicked, setisShellfishClicked] = useState(false);\n\tconst [isPorkClicked, setisPorkClicked] = useState(false);\n\tconst [isChickenClicked, setisChickenClicked] = useState(false);\n\tconst [isFishClicked, setisFishClicked] = useState(false);\n\tconst [isSesameClicked, setisSesameClicked] = useState(false);\n\tconst [isVeganClicked, setisVeganClicked] = useState(false);\n\tconst [list, setList] = useState([]);\n\t// useEffect(() => {\n\t//  // console.log(list);\n\t//  if (list.length > 5) {\n\t//      alert(\"NO MORE THAN 4!\");\n\t//      return;\n\t//  }\n\t// }, [list]);\n\n\tconst update = async (email, pref) => {\n\t\ttry {\n\t\t\t// console.log(email);\n\t\t\t// console.log(pref);\n\t\t\tawait fetch(\n\t\t\t\t`https://trojans-eat.herokuapp.com/api/v1/user/email/${email}/pref/${pref}`,\n\t\t\t\t{ method: \"PUT\" }\n\t\t\t);\n\t\t} catch (err) {\n\t\t\t// console.log(\"ERROR\");\n\t\t}\n\t};\n\n\tconst submitHandler = function (event) {\n\t\tevent.preventDefault();\n\t\tif (list.length > 4) {\n\t\t\talert(\"NO MORE THAN 4!\");\n\t\t\tsetList([]);\n\t\t\treturn;\n\t\t}\n\t\tconst pref = list.join();\n\t\t// console.log(pref);\n\t\tconst email = localStorage.getItem(\"token\");\n\t\tupdate(email, pref);\n\t\tnavigate(\"/Dashboard\", { replace: true });\n\t\t// console.log(\"submitted\");\n\t};\n\n\tconst onChangeBeef = () => {\n\t\t// console.log(\"clicked beef\");\n\t\tif (isBeefClicked === false) {\n\t\t\tlet temp = list;\n\t\t\ttemp.push(\"beef\");\n\t\t\t// console.log(temp);\n\t\t\tsetList(temp);\n\t\t\t// console.log(list);\n\t\t} else {\n\t\t\tlet temp = list;\n\t\t\t// console.log(temp);\n\t\t\tsetList(temp.filter((item) => item !== \"beef\"));\n\t\t}\n\n\t\tsetisBeefClicked((prevState) => !prevState);\n\t};\n\n\tconst onChangeDairy = () => {\n\t\t// console.log(\"clicked dairy\");\n\t\tif (isDairyClicked === false) {\n\t\t\tlet temp = list;\n\t\t\ttemp.push(\"diary\");\n\t\t\tsetList(temp);\n\t\t} else {\n\t\t\tlet temp = list;\n\t\t\tsetList(temp.filter((item) => item !== \"diary\"));\n\t\t}\n\t\tsetisDairyClicked((prevState) => !prevState);\n\t};\n\n\tconst onChange = () => {\n\t\t// console.log(\"clicked\");\n\t\tsetisClicked((prevState) => !prevState);\n\t};\n\n\tconst onChangeEggs = () => {\n\t\t// console.log(\"clicked eggs\");\n\t\tif (isEggsClicked === false) {\n\t\t\tlet temp = list;\n\t\t\ttemp.push(\"eggs\");\n\t\t\tsetList(temp);\n\t\t} else {\n\t\t\tlet temp = list;\n\t\t\tsetList(temp.filter((item) => item !== \"eggs\"));\n\t\t}\n\t\tsetisEggsClicked((prevState) => !prevState);\n\t};\n\n\tconst onChangeShellfish = () => {\n\t\t// console.log(\"clicked shellish\");\n\t\tif (isShellfishClicked === false) {\n\t\t\tlet temp = list;\n\t\t\ttemp.push(\"shellfish\");\n\t\t\tsetList(temp);\n\t\t} else {\n\t\t\tlet temp = list;\n\t\t\tsetList(temp.filter((item) => item !== \"shellfish\"));\n\t\t}\n\t\tsetisShellfishClicked((prevState) => !prevState);\n\t};\n\n\tconst onChangePork = () => {\n\t\t// console.log(\"clicked pork\");\n\t\tif (isPorkClicked === false) {\n\t\t\tlet temp = list;\n\t\t\ttemp.push(\"pork\");\n\t\t\tsetList(temp);\n\t\t} else {\n\t\t\tlet temp = list;\n\t\t\tsetList(temp.filter((item) => item !== \"pork\"));\n\t\t}\n\t\tsetisPorkClicked((prevState) => !prevState);\n\t};\n\n\tconst onChangeChicken = () => {\n\t\t// console.log(\"clicked chicken\");\n\t\tif (isChickenClicked === false) {\n\t\t\tlet temp = list;\n\t\t\ttemp.push(\"chicken\");\n\t\t\tsetList(temp);\n\t\t} else {\n\t\t\tlet temp = list;\n\t\t\tsetList(temp.filter((item) => item !== \"chicken\"));\n\t\t}\n\t\tsetisChickenClicked((prevState) => !prevState);\n\t};\n\n\tconst onChangeFish = () => {\n\t\t// console.log(\"clicked fish\");\n\t\tif (isFishClicked === false) {\n\t\t\tlet temp = list;\n\t\t\ttemp.push(\"fish\");\n\t\t\tsetList(temp);\n\t\t} else {\n\t\t\tlet temp = list;\n\t\t\tsetList(temp.filter((item) => item !== \"fish\"));\n\t\t}\n\t\tsetisFishClicked((prevState) => !prevState);\n\t};\n\n\tconst onChangeSesame = () => {\n\t\t// console.log(\"clicked sesame\");\n\t\tif (isSesameClicked === false) {\n\t\t\tlet temp = list;\n\t\t\ttemp.push(\"sesame\");\n\t\t\tsetList(temp);\n\t\t} else {\n\t\t\tlet temp = list;\n\t\t\tsetList(temp.filter((item) => item !== \"sesame\"));\n\t\t}\n\t\tsetisSesameClicked((prevState) => !prevState);\n\t};\n\n\tconst onChangeVegan = () => {\n\t\t// console.log(\"clicked vegan\");\n\t\tif (isVeganClicked === false) {\n\t\t\tlet temp = list;\n\t\t\ttemp.push(\"vegan\");\n\t\t\tsetList(temp);\n\t\t} else {\n\t\t\tlet temp = list;\n\t\t\tsetList(temp.filter((item) => item !== \"vegan\"));\n\t\t}\n\t\tsetisVeganClicked((prevState) => !prevState);\n\t};\n\n\treturn (\n\t\t<div className='flex min-h-full items-center justify-center mx-10 px-8 mt-20'>\n\t\t\t<div className='mx-8 max-w-7xl px-2 sm:px-6 lg:px-8'>\n\t\t\t\t<h1 className='text-3xl font-bold mx-8 my-2 mt-6 tracking-tight'>\n\t\t\t\t\tSelect Your Preferences\n\t\t\t\t</h1>\n\t\t\t\t<h6 className='mx-8 my-2'>Select up to 4 preferences.</h6>\n\t\t\t\t<form className='mt-10 mx-8 mb-0 space-y-6' onSubmit={submitHandler}>\n\t\t\t\t\t<div className='grid grid-cols-4 gap-4 justify-content'>\n\t\t\t\t\t\t{isBeefClicked ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeBeef}\n\t\t\t\t\t\t\t\tclassName='checkmark justify-content text-center border-2 border-red-600 bg-red-600 text-white hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>Beef</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeBeef}\n\t\t\t\t\t\t\t\tclassName='checkmark justify-content text-center border-2 border-red-600 text-black hover:bg-red-600 hover:border-red-600 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>No Beef</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{isDairyClicked ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeDairy}\n\t\t\t\t\t\t\t\tclassName='checkmark justify-content text-center border-2 border-red-600 bg-red-600 text-white hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>Dairy</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeDairy}\n\t\t\t\t\t\t\t\tclassName='checkmark justify-content text-center border-2 border-red-600 text-black hover:bg-red-600 hover:border-red-600 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>No Dairy</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{isEggsClicked ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeEggs}\n\t\t\t\t\t\t\t\tclassName='checkmark justify-content text-center border-2 border-red-600 bg-red-600 text-white hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>Eggs</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeEggs}\n\t\t\t\t\t\t\t\tclassName='checkmark justify-content text-center border-2 border-red-600 text-black hover:bg-red-600 hover:border-red-600 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>No Eggs</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{isShellfishClicked ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeShellfish}\n\t\t\t\t\t\t\t\tclassName='checkmark justify-content text-center border-2 border-red-600 bg-red-600 text-white hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>Shellfish</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeShellfish}\n\t\t\t\t\t\t\t\tclassName='checkmark justify-content text-center border-2 border-red-600 text-black hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>No Shellfish</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='grid grid-cols-8 gap-4 justify-content'>\n\t\t\t\t\t\t{isPorkClicked ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangePork}\n\t\t\t\t\t\t\t\tclassName='col-start-2 col-end-4 checkmark justify-content text-center border-2 border-red-600 bg-red-600 text-white hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>Pork</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangePork}\n\t\t\t\t\t\t\t\tclassName='col-start-2 col-end-4 checkmark justify-content text-center border-2 border-red-600 text-black hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>No Pork</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{isChickenClicked ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeChicken}\n\t\t\t\t\t\t\t\tclassName='col-start-4 col-end-6 checkmark justify-content text-center border-2 border-red-600 bg-red-600 text-white hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>Chicken</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeChicken}\n\t\t\t\t\t\t\t\tclassName='col-start-4 col-end-6 checkmark justify-content text-center border-2 border-red-600 text-black hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>No Chicken</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{isFishClicked ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeFish}\n\t\t\t\t\t\t\t\tclassName='col-start-6 col-end-8 checkmark justify-content text-center border-2 border-red-600 bg-red-600 text-white hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>Fish</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeFish}\n\t\t\t\t\t\t\t\tclassName='col-start-6 col-end-8 checkmark justify-content text-center border-2 border-red-600 text-black hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>No Fish</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='grid grid-cols-8 gap-4 justify-content'>\n\t\t\t\t\t\t{isSesameClicked ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeSesame}\n\t\t\t\t\t\t\t\tclassName='col-start-3 col-end-5 checkmark justify-content text-center border-2 border-red-600 bg-red-600 text-white hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>Sesame</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeSesame}\n\t\t\t\t\t\t\t\tclassName='col-start-3 col-end-5 checkmark justify-content text-center border-2 border-red-600 text-black hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>No Sesame</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{isVeganClicked ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeVegan}\n\t\t\t\t\t\t\t\tclassName='col-start-5 col-end-7 checkmark justify-content text-center border-2 border-red-600 bg-red-600 text-white hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>Vegan</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={onChangeVegan}\n\t\t\t\t\t\t\t\tclassName='col-start-5 col-end-7 checkmark justify-content text-center border-2 border-red-600 text-black hover:bg-red-700 hover:border-red-700 hover:text-white text-sm px-4 py-2 border rounded-full'>\n\t\t\t\t\t\t\t\t<p>No Vegan</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='grid grid-cols-9 justify-content mt-20 mx-20'>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tclassName='col-start-4 col-end-7 group relative flex w-full justify-center rounded-md border border-transparent bg-red-800 py-2 px-4 text-sm font-medium text-white hover:bg-red-800 focus:outline-none focus:ring-2 focus:ring-red-800 focus:ring-offset-2'>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default Prefernces;","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Dashboard/Navbar.js",[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/FoodOptions/Food.js",[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/FoodOptions/Type.js",[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Dashboard/Dashboard.jsx",["81","82","83","84","85","86","87"],[],"import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\nimport Navbar from './Navbar'\nimport Food from '../FoodOptions/Food';\nimport DiningHall from \"../DiningHall/DiningHall\";\nimport TopRecommended from \"../DiningHall/TopRecommended\";\n\nconst meal_begins = [\"06:00:00\", \"12:00:00\", \"17:00:00\"];\nconst meal_ends = [\"12:00:00\", \"17:00:00\", \"22:00:00\"];\n\nfunction getMeal(s) {\n    if (s > meal_begins[0] && s < meal_ends[0]) {\n        return \"breakfast\";\n    } else if (s > meal_begins[1] && s < meal_ends[1]) {\n        return \"lunch\";\n    } else if (s > meal_begins[2] && s < meal_ends[2]) {\n        return \"dinner\";\n    }\n}\n\nexport default function Dashboard() {\n    let res = []\n    if (localStorage.getItem(\"token\")) {\n        res = localStorage.getItem(\"token\").split('@');\n    }\n    const name = res[0];\n\n    const [topObj, setTopObj] = useState({});\n\n    // menu GET request\n    const [menu, setMenu] = useState([]);\n    // dining hall GET request\n    const [diningHalls, setDiningHalls] = useState([]);\n    // gets User's preferences\n    const [prefs, setPrefs] = useState([]);\n    const [matched, setMatched] = useState([]);\n\n    let top_recommended = {}\n\n    useEffect(() => {\n        const fetchPrefs = async () => {\n            try {\n                const {data: response} = await axios.get(`https://trojans-eat.herokuapp.com/api/v1/user/email/${localStorage.getItem(\"token\")}/getPref`);\n                let keys = []\n                Object.entries(response).map(([k,v]) => keys.push(k.toLowerCase()));\n                // console.log(keys)\n                setPrefs(keys);\n            } catch (error) {\n                // console.error(error.message);\n            }\n        }\n        fetchPrefs()\n    }, [])\n\n    useEffect(() => {\n        const fetchMenu = async () => {\n            try {\n                const {data: response} = await axios.get('https://trojans-eat.herokuapp.com/api/v1/menu');\n                setMenu(response);\n            } catch (error) {\n                // console.error(error.message);\n            }\n        }\n        fetchMenu()\n    }, [])\n\n    useEffect(() => {\n        const fetchDiningHalls = async () => {\n            try {\n                const {data: response} = await axios.get('https://trojans-eat.herokuapp.com/api/v1/dining-halls');\n                setDiningHalls(response);\n                // console.log(response)\n            } catch (error) {\n                // console.error(error.message);\n            }\n        }\n        fetchDiningHalls()\n    },[])\n\n    const fetchData = async () => {\n        // const dHalls = [\"EVK\", \"VLG\", \"PKS\"];\n        const pref = await fetch(\n            `https://trojans-eat.herokuapp.com/api/v1/user/email/${localStorage.getItem(\n                \"token\"\n            )}/getPref`\n        );\n        var today = new Date();\n        const time =\n            today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        // console.log(time);\n\n        const prefJson = await pref.json();\n        const prefList = Object.keys(prefJson);\n        const prefLList = prefList.map((item) => {\n            return item.toLowerCase();\n        });\n        let top = { VLG: [], EVK: [], PKS: [] };\n        for (const pref of prefLList) {\n            const res1 = await fetch(\n                `https://trojans-eat.herokuapp.com/api/v1/matchedMenu/type/${pref}/dh/evk/meal/${getMeal(\n                    time\n                )}`\n            );\n            const res2 = await fetch(\n                `https://trojans-eat.herokuapp.com/api/v1/matchedMenu/type/${pref}/dh/vlg/meal/${getMeal(\n                    time\n                )}`\n            );\n            const res3 = await fetch(\n                `https://trojans-eat.herokuapp.com/api/v1/matchedMenu/type/${pref}/dh/pks/meal/${getMeal(\n                    time\n                )}`\n            );\n\n            const res1Json = await res1.json();\n            const res2Json = await res2.json();\n            const res3Json = await res3.json();\n            for (const temp of res1Json) {\n                const existingTemp = top.EVK.filter((item) => item.id === temp.id);\n                if (existingTemp.length == 0) {\n                    top.EVK.push(temp);\n                }\n            }\n            for (const temp of res2Json) {\n                const existingTemp = top.VLG.filter((item) => item.id === temp.id);\n                if (existingTemp.length == 0) {\n                    top.VLG.push(temp);\n                }\n            }\n            for (const temp of res3Json) {\n                const existingTemp = top.PKS.filter((item) => item.id === temp.id);\n                if (existingTemp.length == 0) {\n                    top.PKS.push(temp);\n                }\n            }\n        }\n        const res4 = await fetch(\n            `https://trojans-eat.herokuapp.com/api/v1/dining-halls`\n        );\n        const res4Json = await res4.json();\n        let vlgSize = top.VLG.length;\n        let evkSize = top.EVK.length;\n        let pksSize = top.PKS.length;\n        let tempTop = {};\n        if (vlgSize >= evkSize && vlgSize >= pksSize) {\n            tempTop = top.VLG;\n        } else if (evkSize > pksSize && evkSize > pksSize) {\n            tempTop = top.EVK;\n        } else {\n            tempTop = top.PKS;\n        }\n        // console.log(\"tempTop: \");\n        // console.log(tempTop);\n        setMatched(tempTop);\n\n        if (tempTop[0].dHall === 'EVK') {\n            setTopObj(res4Json[0])\n        } else if (tempTop[0].dHall === 'PKS') {\n            setTopObj(res4Json[1])\n        } else if (tempTop[0].dHall === 'VLG') {\n            setTopObj(res4Json[2])\n        }\n    };\n    const fetchAsync = async () => {\n        await fetchData();\n        // console.log(topObj);\n    };\n    useEffect(() => {\n        fetchAsync();\n    }, []);\n\n    return(\n    <div className='dark:bg-gray-900'>\n        <Navbar />\n        <div className='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'>\n            <h1 className='text-3xl font-bold ml-4 dark:text-white'>Hi {name}!👋</h1>\n            <div className='grid grid grid-cols-1 sm:grid-cols-2 sm:gap-10 pl-4'>\n                <div>\n                    <h1 className='text-lg font-bold pt-5 pb-2 dark:text-white'>Top Recommended</h1>\n                    <TopRecommended props={topObj} />\n                </div>\n                <div className='sm:ml-5'>\n                    <h1 className='text-lg font-semibold pt-5 pb-2 dark:text-white'>Personalized Options</h1>\n                    <div className='flex flex-col h-[280px] overflow-y-scroll'>\n                        {\n                            matched.map((item) => <Food props={item}/>)\n                        }\n                    </div>\n                </div>\n            </div>\n            <div>\n                <h1 className='text-lg font-bold pt-5 pl-4 dark:text-white'>Other Recommendations</h1>\n                <div className='flex overflow-x-scroll p-5 mt-2'>\n                    {\n                        diningHalls.map((hall,i) => <DiningHall key={i} props={hall}/>)\n                    }\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n}","/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/DiningHall/TopRecommended.jsx",[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/DiningHall/DiningHall.jsx",[],[],"/Users/josh/IdeaProjects/CSCI201/TrojanEat_Web/frontend/src/components/Splash/Splash.jsx",["88","89"],[],"/* This example requires Tailwind CSS v3.0+ */\nimport { useState } from 'react'\nimport { Dialog } from '@headlessui/react'\nimport { Bars3Icon, XMarkIcon } from '@heroicons/react/24/outline'\nimport logo from \"../../logo.png\";\n\nconst navigation = [\n]\n\nexport default function Splash() {\n    const [mobileMenuOpen, setMobileMenuOpen] = useState(false)\n\n    return (\n        <div className=\"isolate bg-white dark:bg-slate-900\">\n            <div className=\"absolute inset-x-0 top-[-10rem] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[-20rem]\">\n                <svg\n                    className=\"relative left-[calc(50%-11rem)] -z-10 h-[21.1875rem] max-w-none -translate-x-1/2 rotate-[30deg] sm:left-[calc(50%-30rem)] sm:h-[42.375rem]\"\n                    viewBox=\"0 0 1155 678\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path\n                        fill=\"url(#45de2b6b-92d5-4d68-a6a0-9b9b2abad533)\"\n                        fillOpacity=\".3\"\n                        d=\"M317.219 518.975L203.852 678 0 438.341l317.219 80.634 204.172-286.402c1.307 132.337 45.083 346.658 209.733 145.248C936.936 126.058 882.053-94.234 1031.02 41.331c119.18 108.451 130.68 295.337 121.53 375.223L855 299l21.173 362.054-558.954-142.079z\"\n                    />\n                    <defs>\n                        <linearGradient\n                            id=\"45de2b6b-92d5-4d68-a6a0-9b9b2abad533\"\n                            x1=\"1155.49\"\n                            x2=\"-78.208\"\n                            y1=\".177\"\n                            y2=\"474.645\"\n                            gradientUnits=\"userSpaceOnUse\"\n                        >\n                            <stop stopColor=\"#990000\" />\n                            <stop offset={1} stopColor=\"#FFC72C\" />\n                        </linearGradient>\n                    </defs>\n                </svg>\n            </div>\n            <div className=\"px-6 pt-6 lg:px-8\">\n                <div>\n                    <nav className=\"flex h-9 items-center justify-between\" aria-label=\"Global\">\n                        <div className=\"flex lg:min-w-0 lg:flex-1\" aria-label=\"Global\">\n                            <a href=\"#\" className=\"-m-1.5 p-1.5\">\n                                <span className=\"sr-only\">Your Company</span>\n                                <img className=\"h-16\" src={ logo } alt=\"\" />\n                            </a>\n                        </div>\n                        <div className=\"flex lg:hidden\">\n                            <button\n                                type=\"button\"\n                                className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\n                                onClick={() => setMobileMenuOpen(true)}\n                            >\n                                <span className=\"sr-only\">Open main menu</span>\n                                <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                            </button>\n                        </div>\n                        <div className=\"hidden lg:flex lg:min-w-0 lg:flex-1 lg:justify-center lg:gap-x-12\">\n                            {navigation.map((item) => (\n                                <a key={item.name} href={item.href} className=\"font-semibold text-gray-900 hover:text-gray-900\">\n                                    {item.name}\n                                </a>\n                            ))}\n                        </div>\n                        <div className=\"hidden lg:flex lg:min-w-0 lg:flex-1 lg:justify-end\">\n                            <a\n                                href=\"/Auth\"\n                                className=\"inline-block rounded-lg px-3 py-1.5 text-sm font-semibold leading-6 text-gray-900 dark:ring-slate-300 shadow-sm ring-1 ring-gray-900/10 hover:ring-gray-900/20 dark:text-white\"\n                            >\n                                Log in\n                            </a>\n                        </div>\n                    </nav>\n                    <Dialog as=\"div\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\n                        <Dialog.Panel focus=\"true\" className=\"fixed inset-0 z-10 overflow-y-auto bg-white px-6 py-6 lg:hidden\">\n                            <div className=\"flex h-9 items-center justify-between\">\n                                <div className=\"flex\">\n                                    <a href=\"#\" className=\"-m-1.5 p-1.5\">\n                                        <span className=\"sr-only\">Your Company</span>\n                                        <img\n                                            className=\"h-8\"\n                                            src={ logo }\n                                            alt=\"\"\n                                        />\n                                    </a>\n                                </div>\n                                <div className=\"flex\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\n                                        onClick={() => setMobileMenuOpen(false)}\n                                    >\n                                        <span className=\"sr-only\">Close menu</span>\n                                        <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"mt-6 flow-root\">\n                                <div className=\"-my-6 divide-y divide-gray-500/10\">\n                                    <div className=\"space-y-2 py-6\">\n                                    </div>\n                                    <div className=\"py-6\">\n                                        <a\n                                            href=\"/Auth\"\n                                            className=\"-mx-3 block rounded-lg py-2.5 px-3 text-base font-semibold leading-6 text-gray-900 hover:bg-gray-400/10 dark:text-white\"\n                                        >\n                                            Log in\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </Dialog.Panel>\n                    </Dialog>\n                </div>\n            </div>\n            <main>\n                <div className=\"relative px-6 lg:px-8\">\n                    <div className=\"mx-auto max-w-3xl pt-20 pb-32 sm:pt-48 sm:pb-40\">\n                        <div>\n                            <div>\n                                <h1 className=\"dark:text-white text-4xl font-bold tracking-tight sm:text-center sm:text-6xl\">\n                                    Home is where the food's at\n                                </h1>\n                                <p className=\"mt-6 text-lg leading-8 text-gray-600 sm:text-center\">\n                                    Find all of USC's exquisite tastes from across the world.\n                                </p>\n                                <div className=\"mt-8 flex gap-x-4 sm:justify-center\">\n                                    <a\n                                        href=\"/Auth\"\n                                        className=\"inline-block rounded-lg bg-red-700 px-4 py-1.5 text-base font-semibold leading-7 text-white shadow-sm ring-1 ring-red-800 hover:bg-amber-500 hover:ring-amber-500 transition\"\n                                    >\n                                        Get started\n                                        <span className=\"text-indigo-200\" aria-hidden=\"true\">\n                      &rarr;\n                    </span>\n                                    </a>\n                                </div>\n                            </div>\n                            <div className=\"absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]\">\n                                <svg\n                                    className=\"relative left-[calc(50%+3rem)] h-[21.1875rem] max-w-none -translate-x-1/2 sm:left-[calc(50%+36rem)] sm:h-[42.375rem]\"\n                                    viewBox=\"0 0 1155 678\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                    <path\n                                        fill=\"url(#ecb5b0c9-546c-4772-8c71-4d3f06d544bc)\"\n                                        fillOpacity=\".3\"\n                                        d=\"M317.219 518.975L203.852 678 0 438.341l317.219 80.634 204.172-286.402c1.307 132.337 45.083 346.658 209.733 145.248C936.936 126.058 882.053-94.234 1031.02 41.331c119.18 108.451 130.68 295.337 121.53 375.223L855 299l21.173 362.054-558.954-142.079z\"\n                                    />\n                                    <defs>\n                                        <linearGradient\n                                            id=\"ecb5b0c9-546c-4772-8c71-4d3f06d544bc\"\n                                            x1=\"1155.49\"\n                                            x2=\"-78.208\"\n                                            y1=\".177\"\n                                            y2=\"474.645\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                                        >\n                                            <stop stopColor=\"#990000\" />\n                                            <stop offset={1} stopColor=\"#FFC72C\" />\n                                        </linearGradient>\n                                    </defs>\n                                </svg>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    )\n}\n",{"ruleId":"90","severity":1,"message":"91","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"94","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"95","line":7,"column":9,"nodeType":"92","messageId":"93","endLine":7,"endColumn":18},{"ruleId":"90","severity":1,"message":"96","line":84,"column":8,"nodeType":"92","messageId":"93","endLine":84,"endColumn":16},{"ruleId":"90","severity":1,"message":"97","line":32,"column":12,"nodeType":"92","messageId":"93","endLine":32,"endColumn":16},{"ruleId":"90","severity":1,"message":"98","line":36,"column":12,"nodeType":"92","messageId":"93","endLine":36,"endColumn":17},{"ruleId":"90","severity":1,"message":"99","line":39,"column":9,"nodeType":"92","messageId":"93","endLine":39,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":121,"column":41,"nodeType":"102","messageId":"103","endLine":121,"endColumn":43},{"ruleId":"100","severity":1,"message":"101","line":127,"column":41,"nodeType":"102","messageId":"103","endLine":127,"endColumn":43},{"ruleId":"100","severity":1,"message":"101","line":133,"column":41,"nodeType":"102","messageId":"103","endLine":133,"endColumn":43},{"ruleId":"104","severity":1,"message":"105","line":171,"column":8,"nodeType":"106","endLine":171,"endColumn":10,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":46,"column":29,"nodeType":"110","endLine":46,"endColumn":66},{"ruleId":"108","severity":1,"message":"109","line":81,"column":37,"nodeType":"110","endLine":81,"endColumn":74},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'isClicked' is assigned a value but never used.","'onChange' is assigned a value but never used.","'menu' is assigned a value but never used.","'prefs' is assigned a value but never used.","'top_recommended' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAsync'. Either include it or remove the dependency array.","ArrayExpression",["111"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"112","fix":"113"},"Update the dependencies array to be: [fetchAsync]",{"range":"114","text":"115"},[5819,5821],"[fetchAsync]"]